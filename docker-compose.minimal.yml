version: '3.8'

services:
  # Backend API (without database/cache dependencies)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: trading-tools-backend-minimal
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - SECRET_KEY=${SECRET_KEY}
      - ENABLE_DATABASE=false
      - ENABLE_CACHING=false
      # External API keys (if needed)
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      # Sentry (optional)
      - SENTRY_DSN=${SENTRY_DSN}
    volumes:
      - ./server/app:/app/app:ro
    restart: unless-stopped
    networks:
      - trading-tools-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://backend:8000
        - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
        - NEXT_PUBLIC_ENVIRONMENT=${ENVIRONMENT:-development}
    container_name: trading-tools-frontend-minimal
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - trading-tools-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  trading-tools-network:
    driver: bridge