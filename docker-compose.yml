version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: trading_tools
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:gMyNpysNEmFNexTBcHgMCYxLNgaOGYXX@shuttle.proxy.rlwy.net:45435/railway
      - ENABLE_DATABASE=true
      - ENABLE_CACHING=false
      - ENVIRONMENT=development
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - SECRET_KEY=your-secret-key-for-sessions-change-this-in-production
      - JWT_SECRET=your-jwt-secret-key-here
      - OCT_PUBLIC_KEY_URL=https://oneclicktrading.io/.well-known/jwks.json
      - THETRADELIST_API_KEY=5b4960fc-2cd5-4bda-bae1-e84c1db1f3f5
      - TRADELIST_API_KEY=5b4960fc-2cd5-4bda-bae1-e84c1db1f3f5
      - POLYGON_API_KEY=your_polygon_api_key_here
    volumes:
      - ./server:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network

  frontend:
    image: node:20-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://backend:8000
    volumes:
      - ./client:/app
      - /app/node_modules
    command: sh -c "npm install --legacy-peer-deps && npm run dev -- --host 0.0.0.0 --port 3000"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: